var webScanMethods = document.querySelectorAll('.scan__options-item');
var arrScanDescription = {
    "general" :
    "Server misconfiguration attacks exploit configuration weaknesses found in web and application servers. Many servers come with unnecessary default and sample files, including applications, configuration files, scripts, and webpages. They may also have unnecessary services enabled, such as content management and remote administration functionality. Debugging functions may be enabled or administrative functions may be accessible to anonymous users. Servers may include well-known default accounts and passwords. Failure to fully lock down or harden the server can leave improperly set file and directory permissions.",

    "sql-injection" :
    "SQL injection is a web security vulnerability that allows an attacker to interfere with the queries that an application makes to its database. It generally allows an attacker to view data that they are not normally able to retrieve. This might include data belonging to other users, or any other data that the application itself is able to access. In many cases, an attacker can modify or delete this data, causing persistent changes to the application's content or behavior. In some situations, an attacker can escalate an SQL injection attack to compromise the underlying server or other back-end infrastructure, or perform a denial-of-service attack.",

    "xss" :
    "Cross-Site Scripting (XSS) attacks are a type of injection, in which malicious scripts are injected into otherwise benign and trusted websites. XSS attacks occur when an attacker uses a web application to send malicious code, generally in the form of a browser side script, to a different end user. Flaws that allow these attacks to succeed are quite widespread and occur anywhere a web application uses input from a user within the output it generates without validating or encoding it."
};

webScanMethods.forEach(webScanMethod => {
    webScanMethod.addEventListener('click', function() {

        // Reset color in each option
        webScanMethods.forEach(item => {
            item = item.closest('.scan__options-item');
            item.classList.remove('scan__options-item--chosen');
            item.querySelector('.option__icon').innerHTML = `<i class="far fa-check-circle"></i>`;
        });

        // Set chosen item
        scanMethod = this.closest('.scan__options-item');
        scanMethod.classList.add('scan__options-item--chosen');
        scanMethod.querySelector('.option__icon').innerHTML = `<i class="fas fa-check-circle"></i>`;

        // Set suitable content for each scan method
        document.querySelector('.scan-information').innerText = arrScanDescription[scanMethod.getAttribute('scan-key')];
    });
});